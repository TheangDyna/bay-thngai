name: Deploy Admin Frontend

on:
  push:
    branches: [deploy]
    paths:
      - "apps/frontends/admin/**"

permissions:
  contents: read

jobs:
  deploy-admin:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Setup Terraform CLI
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

      - name: Terraform Init
        working-directory: terraform
        run: terraform init -input=false

      - name: Load Terraform outputs
        id: tf
        working-directory: terraform
        run: |
          echo "ADMIN_BUCKET=$(terraform output -raw admin_bucket_name)" >> $GITHUB_ENV
          echo "ADMIN_DIST_ID=$(terraform output -raw admin_cloudfront_id)" >> $GITHUB_ENV
          echo "API_URL=https://$(terraform output -raw api_cloudfront_domain)"  >> $GITHUB_ENV

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Build Admin
        working-directory: apps/frontends/admin
        run: |
          npm install
          VITE_API_URL=${{ env.API_URL }} \
          VITE_NODE_ENV=${{ secrets.NODE_ENV }} \
          npm run build

      - name: Sync to S3
        run: |
          aws s3 sync apps/frontends/admin/dist/ s3://${{ env.ADMIN_BUCKET }} \
            --delete \
            --region ${{ env.AWS_REGION }}

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ env.ADMIN_DIST_ID }} \
            --paths "/*"
