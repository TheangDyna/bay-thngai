name: Deploy Project (Infra, Core API, Admin, Client)

on:
  push:
    branches: [deploy]
    paths:
      - "terraform/**"

permissions:
  contents: read

concurrency:
  group: terraform-deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        working-directory: terraform
        run: terraform init -input=false

      - name: Terraform Plan
        working-directory: terraform
        env:
          TF_VAR_mongo_uri: ${{ secrets.MONGO_URI }}
          TF_VAR_cognito_user_pool_id: ${{ secrets.AWS_COGNITO_USER_POOL_ID }}
          TF_VAR_cognito_client_id: ${{ secrets.AWS_COGNITO_CLIENT_ID }}
          TF_VAR_cognito_client_secret: ${{ secrets.AWS_COGNITO_CLIENT_SECRET }}
          TF_VAR_cognito_domain: ${{ secrets.AWS_COGNITO_DOMAIN }}
          TF_VAR_key_name: ${{ secrets.EC2_KEY_NAME }}
          TF_VAR_aws_redirect_uri: ${{ secrets.AWS_REDIRECT_URI }}
          TF_VAR_aws_s3_bucket_name: ${{ secrets.AWS_S3_BUCKET_NAME }}
          TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          TF_VAR_aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_aba_merchant_id: ${{ secrets.ABA_MERCHANT_ID }}
          TF_VAR_aba_public_key: ${{ secrets.ABA_PUBLIC_KEY }}
          TF_VAR_aba_endpoint: ${{ secrets.ABA_ENDPOINT }}
          TF_VAR_backend_callback_url: ${{ secrets.BACKEND_CALLBACK_URL }}
          TF_VAR_frontend_return_success_url: ${{ secrets.FRONTEND_RETURN_SUCCESS_URL }}
          TF_VAR_frontend_return_cancel_url: ${{ secrets.FRONTEND_RETURN_CANCEL_URL }}
          TF_VAR_vapid_public_key: ${{ secrets.VAPID_PUBLIC_KEY }}
          TF_VAR_vapid_private_key: ${{ secrets.VAPID_PRIVATE_KEY }}
        run: terraform plan -lock-timeout=5m

      - name: Terraform Apply
        if: github.ref == 'refs/heads/deploy'
        working-directory: terraform
        env:
          TF_VAR_mongo_uri: ${{ secrets.MONGO_URI }}
          TF_VAR_cognito_user_pool_id: ${{ secrets.AWS_COGNITO_USER_POOL_ID }}
          TF_VAR_cognito_client_id: ${{ secrets.AWS_COGNITO_CLIENT_ID }}
          TF_VAR_cognito_client_secret: ${{ secrets.AWS_COGNITO_CLIENT_SECRET }}
          TF_VAR_cognito_domain: ${{ secrets.AWS_COGNITO_DOMAIN }}
          TF_VAR_key_name: ${{ secrets.EC2_KEY_NAME }}
          TF_VAR_aws_redirect_uri: ${{ secrets.AWS_REDIRECT_URI }}
          TF_VAR_aws_s3_bucket_name: ${{ secrets.AWS_S3_BUCKET_NAME }}
          TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          TF_VAR_aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_aba_merchant_id: ${{ secrets.ABA_MERCHANT_ID }}
          TF_VAR_aba_public_key: ${{ secrets.ABA_PUBLIC_KEY }}
          TF_VAR_aba_endpoint: ${{ secrets.ABA_ENDPOINT }}
          TF_VAR_backend_callback_url: ${{ secrets.BACKEND_CALLBACK_URL }}
          TF_VAR_frontend_return_success_url: ${{ secrets.FRONTEND_RETURN_SUCCESS_URL }}
          TF_VAR_frontend_return_cancel_url: ${{ secrets.FRONTEND_RETURN_CANCEL_URL }}
          TF_VAR_vapid_public_key: ${{ secrets.VAPID_PUBLIC_KEY }}
          TF_VAR_vapid_private_key: ${{ secrets.VAPID_PRIVATE_KEY }}
        run: terraform apply -auto-approve -lock-timeout=5m

      - name: Cleanup Stale Lock
        if: failure()
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-southeast-2
        run: |
          LOCK_ID=$(aws dynamodb query \
            --table-name terraform-locks \
            --key-condition-expression "LockID = :id" \
            --expression-attribute-values '{":id":{"S":"terraform-state-bucket-***-390402568377/baythngai/terraform.tfstate"}}' \
            --query 'Items[0].LockID.S' \
            --output text 2>/dev/null || echo "")
          if [ ! -z "$LOCK_ID" ]; then
            terraform force-unlock $LOCK_ID || true
          fi
